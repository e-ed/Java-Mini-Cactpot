
package com.mycompany.mavenproject3;
import java.util.Random;
import java.util.ArrayList;
import java.util.Arrays;
import javax.swing.JToggleButton;
import javax.swing.BorderFactory;
import java.awt.Color;


/**
 *
 * @author User
 */
public class NewJFrame extends javax.swing.JFrame {
    Random rand = new Random();
    int randomIndex = rand.nextInt(9);
    ArrayList<Integer> numbers = new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9));
    ArrayList<Integer> numbersInRandomOrder = new ArrayList<>();
    javax.swing.JToggleButton[] buttons = new javax.swing.JToggleButton[9];
    javax.swing.JButton[] arrowButtons = new javax.swing.JButton[8];
    int clicksLeft = 3;
    int sum = 0;
    int prize;
    int MGP = 0;
        
        
        

    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        initMyStuff(numbers, numbersInRandomOrder, buttons, arrowButtons);
        initComponents();
        randomize(buttons);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jToggleButton2 = new javax.swing.JToggleButton();
        buttons[1] = jToggleButton2;
        jToggleButton3 = new javax.swing.JToggleButton();
        buttons[2] = jToggleButton3;
        jToggleButton4 = new javax.swing.JToggleButton();
        buttons[3] = jToggleButton4;
        jToggleButton5 = new javax.swing.JToggleButton();
        buttons[4] = jToggleButton5;
        jToggleButton6 = new javax.swing.JToggleButton();
        buttons[5] = jToggleButton6;
        jToggleButton7 = new javax.swing.JToggleButton();
        buttons[6] = jToggleButton7;
        jToggleButton8 = new javax.swing.JToggleButton();
        buttons[7] = jToggleButton8;
        jToggleButton9 = new javax.swing.JToggleButton();
        buttons[8] = jToggleButton9;
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jButton16 = new javax.swing.JButton();
        jToggleButton1 = new javax.swing.JToggleButton();
        buttons[0] = jToggleButton1;
        jButton1 = new javax.swing.JButton();
        arrowButtons[0] = jButton10;
        arrowButtons[1] = jButton11;
        arrowButtons[2] = jButton12;
        arrowButtons[3] = jButton13;
        arrowButtons[4] = jButton14;
        arrowButtons[5] = jButton15;
        arrowButtons[6] = jButton16;
        arrowButtons[7] = jButton1;

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton2.setText("debug");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showDebugInfo(evt);
            }
        });

        jLabel1.setText("MGP: 0");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(104, 104, 104)
                        .addComponent(jButton2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jLabel1)))
                .addContainerGap(142, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(114, 114, 114)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(139, 139, 139))
        );

        jToggleButton2.setBackground(new java.awt.Color(50, 50, 50));
        jToggleButton2.setForeground(new java.awt.Color(255, 0, 0));
        jToggleButton2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jToggleButton2.setFocusable(false);
        jToggleButton2.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                changeHandler(evt);
            }
        });
        jToggleButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewJFrame.this.actionPerformed(evt);
            }
        });

        jToggleButton3.setBackground(new java.awt.Color(50, 50, 50));
        jToggleButton3.setForeground(new java.awt.Color(255, 0, 0));
        jToggleButton3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jToggleButton3.setFocusable(false);
        jToggleButton3.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                changeHandler(evt);
            }
        });
        jToggleButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewJFrame.this.actionPerformed(evt);
            }
        });

        jToggleButton4.setBackground(new java.awt.Color(50, 50, 50));
        jToggleButton4.setForeground(new java.awt.Color(255, 0, 0));
        jToggleButton4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jToggleButton4.setFocusable(false);
        jToggleButton4.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                changeHandler(evt);
            }
        });
        jToggleButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewJFrame.this.actionPerformed(evt);
            }
        });

        jToggleButton5.setBackground(new java.awt.Color(50, 50, 50));
        jToggleButton5.setForeground(new java.awt.Color(255, 0, 0));
        jToggleButton5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jToggleButton5.setFocusable(false);
        jToggleButton5.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                changeHandler(evt);
            }
        });
        jToggleButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewJFrame.this.actionPerformed(evt);
            }
        });

        jToggleButton6.setBackground(new java.awt.Color(50, 50, 50));
        jToggleButton6.setForeground(new java.awt.Color(255, 0, 0));
        jToggleButton6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jToggleButton6.setFocusable(false);
        jToggleButton6.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                changeHandler(evt);
            }
        });
        jToggleButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewJFrame.this.actionPerformed(evt);
            }
        });

        jToggleButton7.setBackground(new java.awt.Color(50, 50, 50));
        jToggleButton7.setForeground(new java.awt.Color(255, 0, 0));
        jToggleButton7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jToggleButton7.setFocusable(false);
        jToggleButton7.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                changeHandler(evt);
            }
        });
        jToggleButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewJFrame.this.actionPerformed(evt);
            }
        });

        jToggleButton8.setBackground(new java.awt.Color(50, 50, 50));
        jToggleButton8.setForeground(new java.awt.Color(255, 0, 0));
        jToggleButton8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jToggleButton8.setFocusable(false);
        jToggleButton8.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                changeHandler(evt);
            }
        });
        jToggleButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewJFrame.this.actionPerformed(evt);
            }
        });

        jToggleButton9.setBackground(new java.awt.Color(50, 50, 50));
        jToggleButton9.setForeground(new java.awt.Color(255, 0, 0));
        jToggleButton9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jToggleButton9.setFocusable(false);
        jToggleButton9.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                changeHandler(evt);
            }
        });
        jToggleButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewJFrame.this.actionPerformed(evt);
            }
        });

        jButton10.setText("↘");
        jButton10.setEnabled(false);
        jButton10.setName("mainDiagonal"); // NOI18N
        jButton10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                hoverFunc(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                hoverFuncExit(evt);
            }
        });
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arrowButtonActionPerformed(evt);
            }
        });

        jButton11.setText("→");
        jButton11.setEnabled(false);
        jButton11.setName("topLeft"); // NOI18N
        jButton11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                hoverFunc(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                hoverFuncExit(evt);
            }
        });
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arrowButtonActionPerformed(evt);
            }
        });

        jButton12.setText("→");
        jButton12.setEnabled(false);
        jButton12.setName("midLeft"); // NOI18N
        jButton12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                hoverFunc(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                hoverFuncExit(evt);
            }
        });
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arrowButtonActionPerformed(evt);
            }
        });

        jButton13.setText("→");
        jButton13.setEnabled(false);
        jButton13.setName("bottomLeft"); // NOI18N
        jButton13.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                hoverFunc(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                hoverFuncExit(evt);
            }
        });
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arrowButtonActionPerformed(evt);
            }
        });

        jButton14.setText("↓");
        jButton14.setEnabled(false);
        jButton14.setName("firstColumn"); // NOI18N
        jButton14.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                hoverFunc(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                hoverFuncExit(evt);
            }
        });
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arrowButtonActionPerformed(evt);
            }
        });

        jButton15.setText("↓");
        jButton15.setEnabled(false);
        jButton15.setName("secondColumn"); // NOI18N
        jButton15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                hoverFunc(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                hoverFuncExit(evt);
            }
        });
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arrowButtonActionPerformed(evt);
            }
        });

        jButton16.setText("↓");
        jButton16.setEnabled(false);
        jButton16.setName("thirdColumn"); // NOI18N
        jButton16.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                hoverFunc(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                hoverFuncExit(evt);
            }
        });
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arrowButtonActionPerformed(evt);
            }
        });

        jToggleButton1.setBackground(new java.awt.Color(50, 50, 50));
        jToggleButton1.setForeground(new java.awt.Color(255, 0, 0));
        jToggleButton1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jToggleButton1.setFocusable(false);
        jToggleButton1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                changeHandler(evt);
            }
        });
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewJFrame.this.actionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton10, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jButton11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton12, javax.swing.GroupLayout.Alignment.TRAILING))
                    .addComponent(jButton13, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jToggleButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jToggleButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jToggleButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jToggleButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                                    .addComponent(jToggleButton4, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jToggleButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jToggleButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                        .addComponent(jToggleButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jToggleButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addContainerGap())
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jButton14, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton15, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(jButton16, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addComponent(jButton10))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton16)
                            .addComponent(jButton15)
                            .addComponent(jButton14))))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jToggleButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jToggleButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jToggleButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jToggleButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jToggleButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jToggleButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jToggleButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jToggleButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jToggleButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jButton11)
                        .addGap(61, 61, 61)
                        .addComponent(jButton12)
                        .addGap(55, 55, 55)
                        .addComponent(jButton13)))
                .addContainerGap(72, Short.MAX_VALUE))
        );

        jButton1.setText("↙");
        jButton1.setEnabled(false);
        jButton1.setName("secondDiagonal"); // NOI18N
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                hoverFunc(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                hoverFuncExit(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arrowButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 45, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void initMyStuff(ArrayList numbers, ArrayList numbersInRandomOrder, javax.swing.JToggleButton[] buttons, javax.swing.JButton[] arrowButtons) {
        Random rand = new Random();
        int randomIndex = rand.nextInt(9);

        for (int i = 0; i < 9; i++) {
        	 randomIndex = rand.nextInt(9 - numbersInRandomOrder.size());
        	 numbersInRandomOrder.add(numbers.get(randomIndex));
        	 numbers.remove(randomIndex);
        	
        }
        

    }
    
    
    private void actionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actionPerformed
        if (clicksLeft > 0) {
            for (int i = 0; i < 9; i++) {
                if (evt.getSource() == buttons[i]) {
                    buttons[i].setText(numbersInRandomOrder.get(i).toString());
                    buttons[i].setEnabled(false);
                    clicksLeft--;
                    break;

                }
            }
            if (clicksLeft == 0) {
                javax.swing.JOptionPane.showMessageDialog(null, "Select a line");
                for (int i = 0; i < 9; i++) {
                    if (i < 8) {
                    arrowButtons[i].setEnabled(true);
                    }
                    buttons[i].setEnabled(false);
                }
            }
        }
    }//GEN-LAST:event_actionPerformed

    private void changeHandler(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_changeHandler

    }//GEN-LAST:event_changeHandler

    private void arrowButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arrowButtonActionPerformed
        for (int i = 0; i < 9; i++) {
            buttons[i].setText(numbersInRandomOrder.get(i).toString());
        }

        for (int i = 0; i < 8; i++) {
            if (arrowButtons[i] == evt.getSource()) {
                switch (arrowButtons[i].getName()) {
                    case "bottomLeft":
                    sum += numbersInRandomOrder.get(6) + numbersInRandomOrder.get(7) + numbersInRandomOrder.get(8);
                    break;
                    case "midLeft":
                    sum += numbersInRandomOrder.get(3) + numbersInRandomOrder.get(4) + numbersInRandomOrder.get(5);
                    break;
                    case "topLeft":
                    sum += numbersInRandomOrder.get(0) + numbersInRandomOrder.get(1) + numbersInRandomOrder.get(2);
                    break;
                    case "mainDiagonal":
                    sum += numbersInRandomOrder.get(0) + numbersInRandomOrder.get(4) + numbersInRandomOrder.get(8);
                    break;
                    case "firstColumn":
                    sum += numbersInRandomOrder.get(0) + numbersInRandomOrder.get(3) + numbersInRandomOrder.get(6);
                    break;
                    case "secondColumn":
                    sum += numbersInRandomOrder.get(1) + numbersInRandomOrder.get(4) + numbersInRandomOrder.get(7);

                    break;
                    case "thirdColumn":
                    sum += numbersInRandomOrder.get(2) + numbersInRandomOrder.get(5) + numbersInRandomOrder.get(8);
                    break;
                    case "secondDiagonal":
                    sum += numbersInRandomOrder.get(2) + numbersInRandomOrder.get(4) + numbersInRandomOrder.get(6);
                    break;
                    default:
                    System.out.println(arrowButtons[i].getName());
                    break;
                }
            }
        }

        prize = getPrize(sum);
        MGP += prize;
        jLabel1.setText("MGP: " + String.valueOf(MGP));
        javax.swing.JOptionPane.showMessageDialog(null, "You got " + prize + "MGP!!");
        
        int restartGame = javax.swing.JOptionPane.showConfirmDialog(null, "Play again?");
        System.out.println(restartGame);
        switch (restartGame) {
            case 0:
                sum = 0;
                randomIndex = rand.nextInt(9);
                numbers = new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9));
                numbersInRandomOrder = new ArrayList<>();
                clicksLeft = 3; 
                initMyStuff(numbers, numbersInRandomOrder, buttons, arrowButtons);
                for (int i = 0; i < 9; i++) {
                    buttons[i].setEnabled(true);
                    buttons[i].setSelected(false);
                    buttons[i].setBackground(Color.BLACK);
                    buttons[i].setText("");
                }
                
                randomize(buttons);
                break;
                
            case 1:
                System.exit(0);
                
        }

    }//GEN-LAST:event_arrowButtonActionPerformed

    private void hoverFuncExit(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hoverFuncExit
        for (int i = 0; i < 8; i++) {
            if (arrowButtons[i] == evt.getSource()) {
                switch (arrowButtons[i].getName()) {
                    case "bottomLeft":
                    changeButtonsBorder(buttons[6], buttons[0], Color.BLACK);
                    changeButtonsBorder(buttons[7], buttons[0], Color.BLACK);
                    changeButtonsBorder(buttons[8], buttons[0], Color.BLACK);

                    break;
                    case "midLeft":
                    changeButtonsBorder(buttons[3], buttons[0], Color.BLACK);
                    changeButtonsBorder(buttons[4], buttons[0], Color.BLACK);
                    changeButtonsBorder(buttons[5], buttons[0], Color.BLACK);
                    break;
                    case "topLeft":
                    changeButtonsBorder(buttons[0], buttons[0], Color.BLACK);
                    changeButtonsBorder(buttons[1], buttons[0], Color.BLACK);
                    changeButtonsBorder(buttons[2], buttons[0], Color.BLACK);
                    break;
                    case "mainDiagonal":
                    changeButtonsBorder(buttons[0], buttons[0], Color.BLACK);
                    changeButtonsBorder(buttons[4], buttons[0], Color.BLACK);
                    changeButtonsBorder(buttons[8], buttons[0], Color.BLACK);
                    break;
                    case "firstColumn":
                    changeButtonsBorder(buttons[0], buttons[0], Color.BLACK);
                    changeButtonsBorder(buttons[3], buttons[0], Color.BLACK);
                    changeButtonsBorder(buttons[6], buttons[0], Color.BLACK);
                    break;
                    case "secondColumn":
                        changeButtonsBorder(buttons[1], buttons[0], Color.BLACK);
                        changeButtonsBorder(buttons[4], buttons[0], Color.BLACK);
                        changeButtonsBorder(buttons[7], buttons[0], Color.BLACK);
                        break;
                    case "thirdColumn":
                        changeButtonsBorder(buttons[2], buttons[0], Color.BLACK);
                        changeButtonsBorder(buttons[5], buttons[0], Color.BLACK);
                        changeButtonsBorder(buttons[8], buttons[0], Color.BLACK);
                        break;
                    case "secondDiagonal":
                        changeButtonsBorder(buttons[2], buttons[0], Color.BLACK);
                        changeButtonsBorder(buttons[4], buttons[0], Color.BLACK);
                        changeButtonsBorder(buttons[6], buttons[0], Color.BLACK);
                        break;
                    default:
                    System.out.println(arrowButtons[i].getName());
                    break;
                }
            }
        }
    }//GEN-LAST:event_hoverFuncExit

    private void hoverFunc(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hoverFunc
        for (int i = 0; i < 8; i++) {
            if (arrowButtons[i] == evt.getSource()) {
                switch (arrowButtons[i].getName()) {
                    case "bottomLeft":
                    changeButtonsBorder(buttons[6], buttons[0], Color.RED);
                    changeButtonsBorder(buttons[7], buttons[0], Color.RED);
                    changeButtonsBorder(buttons[8], buttons[0], Color.RED);

                    break;
                    case "midLeft":
                    changeButtonsBorder(buttons[3], buttons[0], Color.RED);
                    changeButtonsBorder(buttons[4], buttons[0], Color.RED);
                    changeButtonsBorder(buttons[5], buttons[0], Color.RED);
                    break;
                    case "topLeft":
                    changeButtonsBorder(buttons[0], buttons[0], Color.RED);
                    changeButtonsBorder(buttons[1], buttons[0], Color.RED);
                    changeButtonsBorder(buttons[2], buttons[0], Color.RED);
                    break;
                    case "mainDiagonal":
                    changeButtonsBorder(buttons[0], buttons[0], Color.RED);
                    changeButtonsBorder(buttons[4], buttons[0], Color.RED);
                    changeButtonsBorder(buttons[8], buttons[0], Color.RED);
                    break;
                    case "firstColumn":
                    changeButtonsBorder(buttons[0], buttons[0], Color.RED);
                    changeButtonsBorder(buttons[3], buttons[0], Color.RED);
                    changeButtonsBorder(buttons[6], buttons[0], Color.RED);
                    break;
                    case "secondColumn":
                    changeButtonsBorder(buttons[1], buttons[0], Color.RED);
                    changeButtonsBorder(buttons[4], buttons[0], Color.RED);
                    changeButtonsBorder(buttons[7], buttons[0], Color.RED);
                    break;
                    case "thirdColumn":
                        changeButtonsBorder(buttons[2], buttons[0], Color.RED);
                        changeButtonsBorder(buttons[5], buttons[0], Color.RED);
                        changeButtonsBorder(buttons[8], buttons[0], Color.RED);
                        break;
                    case "secondDiagonal":
                        changeButtonsBorder(buttons[2], buttons[0], Color.RED);
                        changeButtonsBorder(buttons[4], buttons[0], Color.RED);
                        changeButtonsBorder(buttons[6], buttons[0], Color.RED);
                        break;
                    default:
                    System.out.println(arrowButtons[i].getName());
                    break;
                }
            }
        }
    }//GEN-LAST:event_hoverFunc

    private void showDebugInfo(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showDebugInfo
        System.out.println("Random index is: " + randomIndex );
        System.out.println(numbersInRandomOrder);
    }//GEN-LAST:event_showDebugInfo

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
        
        
       
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JToggleButton jToggleButton2;
    private javax.swing.JToggleButton jToggleButton3;
    private javax.swing.JToggleButton jToggleButton4;
    private javax.swing.JToggleButton jToggleButton5;
    private javax.swing.JToggleButton jToggleButton6;
    private javax.swing.JToggleButton jToggleButton7;
    private javax.swing.JToggleButton jToggleButton8;
    private javax.swing.JToggleButton jToggleButton9;
    // End of variables declaration//GEN-END:variables

    private void randomize(JToggleButton[] buttons) {
        buttons[randomIndex].setText(numbersInRandomOrder.get(randomIndex).toString());
        buttons[randomIndex].setEnabled(false);
        buttons[randomIndex].setBackground(new Color(200, 200, 255));
    }
    
    void changeButtonsBorder(JToggleButton button1, JToggleButton button2, Color color) {
        button1.setBorder(BorderFactory.createLineBorder(color, 2));
//        button1.setBorder(BorderFactory.createCompoundBorder(
//                        BorderFactory.createLineBorder(color, 1), 
//                        BorderFactory.createEmptyBorder(
//                        button2.getBorder().getBorderInsets(button2).top, 
//                        button2.getBorder().getBorderInsets(button2).left, 
//                        button2.getBorder().getBorderInsets(button2).bottom, 
//                        button2.getBorder().getBorderInsets(button2).right)));
    }

    private int getPrize(int sum) {
        switch (sum) {
		    case 6:
		    	return 10000;
		    case 7:
		    	return 36;
		    case 8:
		    	return 720;
		    case 9:
		    	return 360;
		    case 10:
		    	return 80;
		    case 11:
		    	return 252;
		    case 12:
		    	return 108;
		    case 13:
		    	return 72;
		    case 14:
		    	return 54;
		    case 15:
		    	return 180;
		    case 16:
		    	return 72;
		    case 17:
		    	return 180;
		    case 18:
		    	return 119;
		    case 19:
		    	return 36;
		    case 20:
		    	return 306;
		    case 21:
		    	return 1080;
		    case 22:
		    	return 144;
		    case 23:
		    	return 1800;
		    case 24:
		    	return 3600;
		    
		    
			
		}
            return 0;
        }
}


//buttons[randomIndex].setText(numbersInRandomOrder.get(i).toString());